# $PROJECT_ID resolves to the current project's ID
# ${_SERVICE} must be provided via --substitutions=_SERVICE=my-service-name argument.

# gcloud builds submit --substitutions _SERVICE=service-name

# See the link below for details on setting default values for substitutions
# https://cloud.google.com/build/docs/configuring-builds/substitute-variable-values

# See this awesome example of how to run unit tests and test coverage using Cloud Build
# https://threedots.tech/post/running-integration-tests-on-google-cloud-build/ 

# Service URL: https://dfcx-vocaptcha-63ietzwyxq-uk.a.run.app

steps:

- id: docker-build-push-service
  waitFor: ['-']
  dir: cr-speaker-id
  name: gcr.io/cloud-builders/docker
  entrypoint: bash
  args:
  - -c
  - | 
    docker build -t gcr.io/$PROJECT_ID/${_SERVICE} .
    docker push gcr.io/$PROJECT_ID/${_SERVICE}
    echo $(git --version)

- id: gcloud-run-deploy-backend-processor
  waitFor: ['docker-build-push-service']
  name: gcr.io/google.com/cloudsdktool/cloud-sdk
  entrypoint: bash
  args: 
  - -c
  - | 
    gcloud run deploy ${_SERVICE} \
      --project $PROJECT_ID \
      --image gcr.io/$PROJECT_ID/${_SERVICE} \
      --update-secrets DB_HOST=_DB_HOST:1 \
      --update-secrets DB_PORT=_DB_PORT:1 \
      --update-secrets DB_USER=_DB_USER:1 \
      --update-secrets DB_PASS=_DB_PASS:1 \
      --update-secrets DB_NAME=_DB_NAME:1 \
      --update-secrets DB_CNST=_DB_CNST:1 \
      --timeout 15m \
      --region ${_REGION} \
      --no-cpu-throttling \
      --vpc-connector ${_VPC_CONNECTOR} \
      --platform managed \
      --min-instances 0 \
      --max-instances 5 \
      --allow-unauthenticated

substitutions:
  _SERVICE: py-speaker-id-adv
  _VPC_CONNECTOR: svpca-vpc-sb-dialogflow
  _REGION: us-central1
  # _PROJECT_NUMBER: "MY_PROJECT_NUM"

# # Attempt to use Terraform from Cloud Build
# # A bit problematic because it seems to rely on 
# # gcloud SDK - consider rebuilding using the
# # gcr.io/google.com/cloudsdktool/cloud-sdk as 
# # The base container.  
# - id: infrastructure-bootstrap
#   waitFor: ['-']
#   dir: terraform
#   name: gcr.io/${PROJECT_ID}/terraform
#   entrypoint: bash
#   args:
#   - -c
#   - |
#     terraform init
#     terraform apply \
#       -auto-approve \
#       -var="project_id=${PROJECT_ID}, project_number=${_PROJECT_NUMBER}"
